Q1) 

// Create a HashMap as phonedirectory. Add entries in phonedirectory as  id, name and number.
// With user input take name of a user and search in phonedirectory.
// Display result whether name is available in phonedirectory or not using HashMap methods.


package lab;

import java.util.HashMap;
import java.util.Scanner;

public class PhoneDirectory {
    public static void main(String[] args) {
        // Create a HashMap 
        HashMap<Integer, String[]> phoneDirectory = new HashMap<>();
        
        // Add entries to the phone directory (id, name, number)
        phoneDirectory.put(1, new String[] {"Tom", "88079-47892"});
        phoneDirectory.put(2, new String[] {"Jerry", "98765-34785"});
        phoneDirectory.put(3, new String[] {"Bob", "97871-45671"});
       
        // Scanner to take user input
        Scanner scanner = new Scanner(System.in);

        // Ask the user for the name they want to search for
        System.out.print("Enter the name to search in the phone directory: ");
        String nameToSearch = scanner.nextLine();

        // Initialize a flag to check if the name exists
        boolean found = false;

        for (String[] entry : phoneDirectory.values()) {
            if (entry[0].equalsIgnoreCase(nameToSearch)) {
                System.out.println("Name: " + entry[0] + ", Number: " + entry[1]);
                found = true;
                break;
            }
        }

        // If the name was not found
        if (!found) {
            System.out.println("Name not found in the phone directory.");
        }

        // Close the scanner
        scanner.close();
    }
}


Output-
Enter the name to search in the phone directory: Bob
Name: Bob, Number: 97871-45671



Q2)


// Create a TreeMap as userdetails. Add entries in   userdetails  as name and age.
// create methods as add users, search users in userdetails with exit method as well.
// Display result as menu to work on all userdetails methods.



package lab;

import java.util.Map;
import java.util.Scanner;
import java.util.TreeMap;

public class UserDetails {
	// Treemap to store user details	
    private static TreeMap<String, Integer> userdetails = new TreeMap<>();

    // add a user to the TreeMap
    public static void addUser(String name, int age) {
        userdetails.put(name, age);
        System.out.println("User " + name + " added successfully.");
    }

    // Method to search for a user in the TreeMap
    public static void searchUser(String name) {
        if (userdetails.containsKey(name)) {
            System.out.println("User found: " + name + ", Age: " + userdetails.get(name));
        }
	 else {
            System.out.println("User not found.");
        }
    }

    // Method to display all users in the TreeMap
    public static void displayAllUsers() {
        if (userdetails.isEmpty()) {
            System.out.println("No users to display.");
        }
	 else {
            System.out.println("User Details:");

            for (Map.Entry<String, Integer> entry : userdetails.entrySet()) {
                System.out.println("Name: " + entry.getKey() + ", Age: " + entry.getValue());
            }
        }
    }

    // Main method with the menu system
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        boolean exit = false;

        while (!exit) {
            // Display the menu
            System.out.println("\nUser Details Menu:");
            System.out.println("1. Add User");
            System.out.println("2. Search User");
            System.out.println("3. Exit");
            System.out.print("Choose an option(1-3): ");

            int choice = sc.nextInt();
            sc.nextLine();  // Consume the newline

            switch (choice) {
                case 1:
                    // Add user
                    System.out.print("Enter name: ");
                    String name = sc.nextLine();
                    System.out.print("Enter age: ");
                    int age = sc.nextInt();
                    addUser(name, age);
                    break;
                case 2:
                    // Search user
                    System.out.print("Enter name to search: ");
                    String searchName = sc.nextLine();
                    searchUser(searchName);
                    break;

                case 3:
                    // Exit the program
                    System.out.println("Exiting the program.");
                    System.exit(0);;
                    break;
                default:
                    System.out.println("Invalid choice, please try again.");
            }
        }

        sc.close();
    }
}


Output-

User Details Menu:
1. Add User
2. Search User
3. Exit
Choose an option(1-3): 1
Enter name: Bob
Enter age: 21
User Bob added successfully.

User Details Menu:
1. Add User
2. Search User
3. Exit
Choose an option(1-3): 2
Enter name to search: Bob
User found: Bob, Age: 21

User Details Menu:
1. Add User
2. Search User
3. Exit
Choose an option(1-3): 3
Exiting the program.

