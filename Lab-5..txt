Q1) Develop a simple java application to calculate the tax for a particular employee based on his salary. Develop a class named “TaxCalculator“ with a method named calculateTax with the following method parameters, Variable Name Data Type empName String isIndian boolean empSal double This method should return a double taxAmount. The business logic for calculating the tax is as follows, this has to be implemented inside the method, If the employee is not a Indian The calculator should throw a CountryNotValidException If the employee name is null or empty The calculator should throw a EmployeeNameInvalidException If empSal is greater than one lakh and isIndian true taxAmount =empSal *8/100 Otherwise If empSal is between 50K and 1lakh and isIndian true taxAmount =empSal *6/100 Otherwise If empSal is between 30 and 50 Thousand and isIndian true taxAmount =empSal *5/100 Otherwise If empSal is between 10 and 30 Thousand and isIndian true taxAmount =empSal *4/100 Otherwise The calculator should throw a TaxNotEligibleException. Develop a main class CalculatorSimulator , implement the following logic in main method 
1. Execute the calculateTax Method and print the tax amount as “Tax amount is “
2. In case the calculateTaxMethod throws exceptions, this method needs to catch the appropriate exception print the stack trace and display the following messages, a. Country not valid: “The employee should be an Indian citizen for calculating tax” b. Employee name not valid: “The employee name cannot be empty” c. Not eligible for Tax calculation: “The employee does not need to pay tax” 
The following test cases to be executed, change the data in main method and run it and verify the output messages Test Cases Employee Name Employee Salary Is Indian Message Expected 
Test Case 1 Ron 34000 False The employee should be an Indian citizen for calculating tax. 
Test Case 2 Tim 1000 True The employee does not need to pay tax 
Test Case 3 Jack 55000 True Tax amount is 3300 
Test Case 4 30000 True The employee name cannot be empty.




package com.demo;

// Exception for Invalid Country 
class CountryNotValidException extends Exception {
 public CountryNotValidException(String message) {
     super(message);
 }
}

// Exception for Invalid Employee Name 
class EmployeeNameInvalidException extends Exception {
 public EmployeeNameInvalidException(String message) {
     super(message);
 }
}

// Exception for Tax Not Eligible
class TaxNotEligibleException extends Exception {
 public TaxNotEligibleException(String message) {
     super(message);
 }
}

//Tax Calculator Class
class TaxCalculator {
 
 public double calculateTax(String empName, boolean isIndian, double empSal)
		 throws CountryNotValidException, EmployeeNameInvalidException, TaxNotEligibleException {
     
     // Check if employee name is valid
     if (empName == null || empName.isEmpty()) {
         throw new EmployeeNameInvalidException("The employee name cannot be empty.");
     }

     // Check if employee is Indian
     if (!isIndian) {
         throw new CountryNotValidException("The employee should be an Indian citizen for calculating tax");
     }

     // Tax Calculation based on salary ranges
     double taxAmount = 0;

     if (empSal > 100000) {
         taxAmount = empSal * 0.08; 
     } 
     else if (empSal >= 50000 && empSal <= 100000) {
         taxAmount = empSal * 0.06; 
     } 
     else if (empSal >= 30000 && empSal < 50000) {
         taxAmount = empSal * 0.05; 
     } 
     else if (empSal >= 10000 && empSal < 30000) {
         taxAmount = empSal * 0.04;
     } 
     else {
         throw new TaxNotEligibleException("The employee does not need to pay tax"); 
     }

     return taxAmount;
 }
}

public class ExceptionHandling {

 public static void main(String[] args) {
     
     // Test Cases
     TaxCalculator calculator = new TaxCalculator();

     // Test Case 1
     try {
         double tax1 = calculator.calculateTax("Ron", false, 34000);
         System.out.println("Tax amount is " + tax1);
     } 
     catch (CountryNotValidException e) {
         System.out.println(e.getMessage()); 
     } 
     catch (EmployeeNameInvalidException e) {
         System.out.println(e.getMessage());
     } 
     catch (TaxNotEligibleException e) {
         System.out.println(e.getMessage());
     }

     // Test Case 2
     try {
         double tax2 = calculator.calculateTax("Tim", true, 1000);
         System.out.println("Tax amount is " + tax2);
     }
     catch (CountryNotValidException e) {
         System.out.println(e.getMessage());
     }
     catch (EmployeeNameInvalidException e) {
         System.out.println(e.getMessage());
     }
     catch (TaxNotEligibleException e) {
         System.out.println(e.getMessage()); 
     }

     // Test Case 3
     try {
         double tax3 = calculator.calculateTax("Jack", true, 55000);
         System.out.println("Tax amount is " + tax3); 
     }
     catch (CountryNotValidException e) {
         System.out.println(e.getMessage());
     } 
     catch (EmployeeNameInvalidException e) {
         System.out.println(e.getMessage());
     }
     catch (TaxNotEligibleException e) {
         System.out.println(e.getMessage());
     }

     // Test Case 4
     try {
         double tax4 = calculator.calculateTax("", true, 30000);
         System.out.println("Tax amount is " + tax4);
     } 
     catch (CountryNotValidException e) {
         System.out.println(e.getMessage());
     } 
     catch (EmployeeNameInvalidException e) {
         System.out.println(e.getMessage()); 
     } 
     catch (TaxNotEligibleException e) {
         System.out.println(e.getMessage());
     }
 }
}


Output-

The employee should be an Indian citizen for calculating tax
The employee does not need to pay tax
Tax amount is 3300.0
The employee name cannot be empty.



Q2) Create a program with a logic that throws the ArrayIndexOutOfBoundsException while accessing elements in an array


package com.demo;

public class ArrayException {
    public static void main(String[] args) {
        // Create an array with 3 elements
        int[] numbers = {10, 20, 30};
        
        try {
            // Accessing an invalid index 
            System.out.println(numbers[5]); 
        } 
        catch (ArrayIndexOutOfBoundsException e) {
            // Handle the exception by printing an error message
            System.out.println("Exception caught: " + e.getMessage());
        }
        
    }
}


Output-

Exception caught: Index 5 out of bounds for length 3


